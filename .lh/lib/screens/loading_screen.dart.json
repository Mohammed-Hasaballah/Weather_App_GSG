{
    "sourceFile": "lib/screens/loading_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1689075924942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1689075930476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+// ignore_for_file: avoid_print\r\n+\r\n import 'package:flutter/material.dart';\r\n import 'package:geolocator/geolocator.dart';\r\n import 'package:weather_app/screens/location_screen.dart';\r\n \r\n@@ -70,9 +72,9 @@\n   }\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n+    return const Scaffold(\r\n       body: Center(\r\n         child: CircularProgressIndicator(),\r\n       ),\r\n     );\r\n"
                },
                {
                    "date": 1689076436155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+// ignore_for_file: avoid_print\r\n+\r\n+import 'package:flutter/material.dart';\r\n+import 'package:geolocator/geolocator.dart';\r\n+import 'package:weather_app/screens/location_screen.dart';\r\n+\r\n+class LoadingScreen extends StatefulWidget {\r\n+  const LoadingScreen({super.key});\r\n+\r\n+  @override\r\n+  LoadingScreenState createState() => LoadingScreenState();\r\n+}\r\n+\r\n+class LoadingScreenState extends State<LoadingScreen> {\r\n+  Future<Position> getLocation() async {\r\n+    bool serviceEnabled;\r\n+    LocationPermission permission;\r\n+\r\n+    // Test if location services are enabled.\r\n+    serviceEnabled = await Geolocator.isLocationServiceEnabled();\r\n+    if (!serviceEnabled) {\r\n+      // Location services are not enabled don't continue\r\n+      // accessing the position and request users of the\r\n+      // App to enable the location services.\r\n+      return Future.error('Location services are disabled.');\r\n+    }\r\n+\r\n+    permission = await Geolocator.checkPermission();\r\n+    if (permission == LocationPermission.denied) {\r\n+      permission = await Geolocator.requestPermission();\r\n+      if (permission == LocationPermission.denied) {\r\n+        // Permissions are denied, next time you could try\r\n+        // requesting permissions again (this is also where\r\n+        // Android's shouldShowRequestPermissionRationale\r\n+        // returned true. According to Android guidelines\r\n+        // your App should show an explanatory UI now.\r\n+        return Future.error('Location permissions are denied');\r\n+      }\r\n+    }\r\n+\r\n+    if (permission == LocationPermission.deniedForever) {\r\n+      // Permissions are denied forever, handle appropriately.\r\n+      return Future.error(\r\n+          'Location permissions are permanently denied, we cannot request permissions.');\r\n+    }\r\n+\r\n+    // When we reach here, permissions are granted and we can\r\n+    // continue accessing the position of the device.\r\n+    return await Geolocator.getCurrentPosition();\r\n+  }\r\n+\r\n+ \r\n+\r\n+  @override\r\n+  void initState() {\r\n+    getCurrentLocation();\r\n+    super.initState();\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return const Scaffold(\r\n+      body: Center(\r\n+        child: CircularProgressIndicator(),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1689078352241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,136 +1,27 @@\n-// ignore_for_file: avoid_print\r\n \r\n import 'package:flutter/material.dart';\r\n-import 'package:geolocator/geolocator.dart';\r\n import 'package:weather_app/screens/location_screen.dart';\r\n+// import 'package:geolocator/geolocator.dart';\r\n+// import 'package:weather_app/screens/location_screen.dart';\r\n+import 'package:weather_app/services/location.dart';\r\n \r\n class LoadingScreen extends StatefulWidget {\r\n   const LoadingScreen({super.key});\r\n-\r\n   @override\r\n   LoadingScreenState createState() => LoadingScreenState();\r\n }\r\n \r\n class LoadingScreenState extends State<LoadingScreen> {\r\n-  Future<Position> getLocation() async {\r\n-    bool serviceEnabled;\r\n-    LocationPermission permission;\r\n-\r\n-    // Test if location services are enabled.\r\n-    serviceEnabled = await Geolocator.isLocationServiceEnabled();\r\n-    if (!serviceEnabled) {\r\n-      // Location services are not enabled don't continue\r\n-      // accessing the position and request users of the\r\n-      // App to enable the location services.\r\n-      return Future.error('Location services are disabled.');\r\n-    }\r\n-\r\n-    permission = await Geolocator.checkPermission();\r\n-    if (permission == LocationPermission.denied) {\r\n-      permission = await Geolocator.requestPermission();\r\n-      if (permission == LocationPermission.denied) {\r\n-        // Permissions are denied, next time you could try\r\n-        // requesting permissions again (this is also where\r\n-        // Android's shouldShowRequestPermissionRationale\r\n-        // returned true. According to Android guidelines\r\n-        // your App should show an explanatory UI now.\r\n-        return Future.error('Location permissions are denied');\r\n-      }\r\n-    }\r\n-\r\n-    if (permission == LocationPermission.deniedForever) {\r\n-      // Permissions are denied forever, handle appropriately.\r\n-      return Future.error(\r\n-          'Location permissions are permanently denied, we cannot request permissions.');\r\n-    }\r\n-\r\n-    // When we reach here, permissions are granted and we can\r\n-    // continue accessing the position of the device.\r\n-    return await Geolocator.getCurrentPosition();\r\n-  }\r\n-\r\n- \r\n-\r\n-  @override\r\n-  void initState() {\r\n-    getCurrentLocation();\r\n-    super.initState();\r\n-  }\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return const Scaffold(\r\n-      body: Center(\r\n-        child: CircularProgressIndicator(),\r\n-      ),\r\n-    );\r\n-  }\r\n-}\r\n-// ignore_for_file: avoid_print\r\n-\r\n-import 'package:flutter/material.dart';\r\n-import 'package:geolocator/geolocator.dart';\r\n-import 'package:weather_app/screens/location_screen.dart';\r\n-\r\n-class LoadingScreen extends StatefulWidget {\r\n-  const LoadingScreen({super.key});\r\n-\r\n-  @override\r\n-  LoadingScreenState createState() => LoadingScreenState();\r\n-}\r\n-\r\n-class LoadingScreenState extends State<LoadingScreen> {\r\n-  Future<Position> getLocation() async {\r\n-    bool serviceEnabled;\r\n-    LocationPermission permission;\r\n-\r\n-    // Test if location services are enabled.\r\n-    serviceEnabled = await Geolocator.isLocationServiceEnabled();\r\n-    if (!serviceEnabled) {\r\n-      // Location services are not enabled don't continue\r\n-      // accessing the position and request users of the\r\n-      // App to enable the location services.\r\n-      return Future.error('Location services are disabled.');\r\n-    }\r\n-\r\n-    permission = await Geolocator.checkPermission();\r\n-    if (permission == LocationPermission.denied) {\r\n-      permission = await Geolocator.requestPermission();\r\n-      if (permission == LocationPermission.denied) {\r\n-        // Permissions are denied, next time you could try\r\n-        // requesting permissions again (this is also where\r\n-        // Android's shouldShowRequestPermissionRationale\r\n-        // returned true. According to Android guidelines\r\n-        // your App should show an explanatory UI now.\r\n-        return Future.error('Location permissions are denied');\r\n-      }\r\n-    }\r\n-\r\n-    if (permission == LocationPermission.deniedForever) {\r\n-      // Permissions are denied forever, handle appropriately.\r\n-      return Future.error(\r\n-          'Location permissions are permanently denied, we cannot request permissions.');\r\n-    }\r\n-\r\n-    // When we reach here, permissions are granted and we can\r\n-    // continue accessing the position of the device.\r\n-    return await Geolocator.getCurrentPosition();\r\n-  }\r\n-\r\n   void getCurrentLocation() async {\r\n-    try {\r\n-      final position = await getLocation();\r\n-      Navigator.push(\r\n-        context,\r\n-        MaterialPageRoute(\r\n-          builder: (context) => LocationScreen(\r\n-            position: position,\r\n-          ),\r\n-        ),\r\n-      );\r\n-    } catch (e) {\r\n-      print(e);\r\n+    Location location = Location();\r\n+    await location.getCurrentLocation();\r\n+    if (mounted) {\r\n+      Navigator.push(context, MaterialPageRoute(builder: (context) {\r\n+        return LocationScreen(\r\n+          position: location,\r\n+        );\r\n+      }));\r\n     }\r\n   }\r\n \r\n   @override\r\n@@ -140,11 +31,11 @@\n   }\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return const Scaffold(\r\n+    return Scaffold(\r\n       body: Center(\r\n         child: CircularProgressIndicator(),\r\n       ),\r\n     );\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1689078997347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,6 @@\n-\r\n import 'package:flutter/material.dart';\r\n import 'package:weather_app/screens/location_screen.dart';\r\n-// import 'package:geolocator/geolocator.dart';\r\n-// import 'package:weather_app/screens/location_screen.dart';\r\n import 'package:weather_app/services/location.dart';\r\n \r\n class LoadingScreen extends StatefulWidget {\r\n   const LoadingScreen({super.key});\r\n@@ -31,11 +28,11 @@\n   }\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n+    return const Scaffold(\r\n       body: Center(\r\n         child: CircularProgressIndicator(),\r\n       ),\r\n     );\r\n   }\r\n\\ No newline at end of file\n-}\n+}\r\n"
                },
                {
                    "date": 1689079003520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import 'package:flutter/material.dart';\r\n import 'package:weather_app/screens/location_screen.dart';\r\n import 'package:weather_app/services/location.dart';\r\n+import 'package:http/http.dart' as http;\r\n \r\n class LoadingScreen extends StatefulWidget {\r\n   const LoadingScreen({super.key});\r\n   @override\r\n@@ -34,5 +35,5 @@\n         child: CircularProgressIndicator(),\r\n       ),\r\n     );\r\n   }\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1689079237223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import 'package:flutter/material.dart';\r\n import 'package:weather_app/screens/location_screen.dart';\r\n import 'package:weather_app/services/location.dart';\r\n-import 'package:http/http.dart' as http;\r\n \r\n class LoadingScreen extends StatefulWidget {\r\n   const LoadingScreen({super.key});\r\n   @override\r\n@@ -20,9 +19,9 @@\n         );\r\n       }));\r\n     }\r\n   }\r\n-\r\n+  void \r\n   @override\r\n   void initState() {\r\n     getCurrentLocation();\r\n     super.initState();\r\n"
                },
                {
                    "date": 1689079243882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,11 @@\n         );\r\n       }));\r\n     }\r\n   }\r\n-  void \r\n+  void getData(){\r\n+    \r\n+  }\r\n   @override\r\n   void initState() {\r\n     getCurrentLocation();\r\n     super.initState();\r\n"
                },
                {
                    "date": 1689079249764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n       }));\r\n     }\r\n   }\r\n   void getData(){\r\n-    \r\n+    http.get\r\n   }\r\n   @override\r\n   void initState() {\r\n     getCurrentLocation();\r\n"
                },
                {
                    "date": 1689079262315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n       }));\r\n     }\r\n   }\r\n   void getData(){\r\n-    http.get\r\n+    http.get(u)\r\n   }\r\n   @override\r\n   void initState() {\r\n     getCurrentLocation();\r\n"
                },
                {
                    "date": 1689079275204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import 'package:flutter/material.dart';\r\n import 'package:weather_app/screens/location_screen.dart';\r\n import 'package:weather_app/services/location.dart';\r\n-\r\n+import 'package:http/http.dart' as http;\r\n class LoadingScreen extends StatefulWidget {\r\n   const LoadingScreen({super.key});\r\n   @override\r\n   LoadingScreenState createState() => LoadingScreenState();\r\n@@ -19,11 +19,13 @@\n         );\r\n       }));\r\n     }\r\n   }\r\n-  void getData(){\r\n-    http.get(u)\r\n+\r\n+  void getData() {\r\n+    http.get(url);\r\n   }\r\n+\r\n   @override\r\n   void initState() {\r\n     getCurrentLocation();\r\n     super.initState();\r\n"
                },
                {
                    "date": 1689079307360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n     }\r\n   }\r\n \r\n   void getData() {\r\n+    Strinf\r\n     http.get(url);\r\n   }\r\n \r\n   @override\r\n"
                },
                {
                    "date": 1689079314829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     }\r\n   }\r\n \r\n   void getData() {\r\n-    Strinf\r\n+    String url = 'https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}'\r\n     http.get(url);\r\n   }\r\n \r\n   @override\r\n"
                },
                {
                    "date": 1689079329830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import 'package:flutter/material.dart';\r\n import 'package:weather_app/screens/location_screen.dart';\r\n import 'package:weather_app/services/location.dart';\r\n import 'package:http/http.dart' as http;\r\n+\r\n class LoadingScreen extends StatefulWidget {\r\n   const LoadingScreen({super.key});\r\n   @override\r\n   LoadingScreenState createState() => LoadingScreenState();\r\n@@ -21,9 +22,10 @@\n     }\r\n   }\r\n \r\n   void getData() {\r\n-    String url = 'https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}'\r\n+    Uri url =\r\n+        'https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}';\r\n     http.get(url);\r\n   }\r\n \r\n   @override\r\n"
                },
                {
                    "date": 1689079340928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n   }\r\n \r\n   void getData() {\r\n     Uri url =\r\n-        'https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}';\r\n+        'https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}' as Uri;\r\n     http.get(url);\r\n   }\r\n \r\n   @override\r\n"
                },
                {
                    "date": 1689079413023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n   }\r\n \r\n   void getData() {\r\n     Uri url =\r\n-        'https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}' as Uri;\r\n+        'https://api.openweathermap.org/data/2.5/weather?lat=$lat&lon={lon}&appid={API key}' as Uri;\r\n     http.get(url);\r\n   }\r\n \r\n   @override\r\n"
                },
                {
                    "date": 1689079422789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n   }\r\n \r\n   void getData() {\r\n     Uri url =\r\n-        'https://api.openweathermap.org/data/2.5/weather?lat=$lat&lon={lon}&appid={API key}' as Uri;\r\n+        'https://api.openweathermap.org/data/2.5/weather?lat=$lat&lon=$long&appid=$k' as Uri;\r\n     http.get(url);\r\n   }\r\n \r\n   @override\r\n"
                },
                {
                    "date": 1689079429399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import 'package:flutter/material.dart';\r\n import 'package:weather_app/screens/location_screen.dart';\r\n import 'package:weather_app/services/location.dart';\r\n import 'package:http/http.dart' as http;\r\n+import 'package:weather_app/utilities/constants.dart';\r\n \r\n class LoadingScreen extends StatefulWidget {\r\n   const LoadingScreen({super.key});\r\n   @override\r\n@@ -23,9 +24,9 @@\n   }\r\n \r\n   void getData() {\r\n     Uri url =\r\n-        'https://api.openweathermap.org/data/2.5/weather?lat=$lat&lon=$long&appid=$k' as Uri;\r\n+        'https://api.openweathermap.org/data/2.5/weather?lat=$lat&lon=$long&appid=$kApiKey' as Uri;\r\n     http.get(url);\r\n   }\r\n \r\n   @override\r\n"
                },
                {
                    "date": 1689079457353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \r\n   void getData() {\r\n     Uri url =\r\n         'https://api.openweathermap.org/data/2.5/weather?lat=$lat&lon=$long&appid=$kApiKey' as Uri;\r\n-    http.get(url);\r\n+    http.get(Uri.);\r\n   }\r\n \r\n   @override\r\n   void initState() {\r\n"
                },
                {
                    "date": 1689079464717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     }\r\n   }\r\n \r\n   void getData() {\r\n-    Uri url =\r\n+    String url =\r\n         'https://api.openweathermap.org/data/2.5/weather?lat=$lat&lon=$long&appid=$kApiKey' as Uri;\r\n     http.get(Uri.parse(url));\r\n   }\r\n \r\n"
                },
                {
                    "date": 1689079518482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n       }));\r\n     }\r\n   }\r\n \r\n-  void getData(double laT) {\r\n+  void getData(double la) {\r\n     String url =\r\n         'https://api.openweathermap.org/data/2.5/weather?lat=$lat&lon=$long&appid=$kApiKey' ;\r\n     http.get(Uri.parse(url));\r\n   }\r\n"
                }
            ],
            "date": 1689075924942,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:geolocator/geolocator.dart';\r\nimport 'package:weather_app/screens/location_screen.dart';\r\n\r\nclass LoadingScreen extends StatefulWidget {\r\n  const LoadingScreen({super.key});\r\n\r\n  @override\r\n  LoadingScreenState createState() => LoadingScreenState();\r\n}\r\n\r\nclass LoadingScreenState extends State<LoadingScreen> {\r\n  Future<Position> getLocation() async {\r\n    bool serviceEnabled;\r\n    LocationPermission permission;\r\n\r\n    // Test if location services are enabled.\r\n    serviceEnabled = await Geolocator.isLocationServiceEnabled();\r\n    if (!serviceEnabled) {\r\n      // Location services are not enabled don't continue\r\n      // accessing the position and request users of the\r\n      // App to enable the location services.\r\n      return Future.error('Location services are disabled.');\r\n    }\r\n\r\n    permission = await Geolocator.checkPermission();\r\n    if (permission == LocationPermission.denied) {\r\n      permission = await Geolocator.requestPermission();\r\n      if (permission == LocationPermission.denied) {\r\n        // Permissions are denied, next time you could try\r\n        // requesting permissions again (this is also where\r\n        // Android's shouldShowRequestPermissionRationale\r\n        // returned true. According to Android guidelines\r\n        // your App should show an explanatory UI now.\r\n        return Future.error('Location permissions are denied');\r\n      }\r\n    }\r\n\r\n    if (permission == LocationPermission.deniedForever) {\r\n      // Permissions are denied forever, handle appropriately.\r\n      return Future.error(\r\n          'Location permissions are permanently denied, we cannot request permissions.');\r\n    }\r\n\r\n    // When we reach here, permissions are granted and we can\r\n    // continue accessing the position of the device.\r\n    return await Geolocator.getCurrentPosition();\r\n  }\r\n\r\n  void getCurrentLocation() async {\r\n    try {\r\n      final position = await getLocation();\r\n      Navigator.push(\r\n        context,\r\n        MaterialPageRoute(\r\n          builder: (context) => LocationScreen(\r\n            position: position,\r\n          ),\r\n        ),\r\n      );\r\n    } catch (e) {\r\n      print(e);\r\n    }\r\n  }\r\n\r\n  @override\r\n  void initState() {\r\n    getCurrentLocation();\r\n    super.initState();\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      body: Center(\r\n        child: CircularProgressIndicator(),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}